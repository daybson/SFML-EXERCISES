//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : SFML Framework
//  @ File Name : Renderer.cs
//  @ Date : 13/09/2016
//  @ Author : Daybson B. S. Paisante <daybson.paisante@outlook.com>
//
//

using SFML.Graphics;
using SFML.Window;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using SFML.System;
using SFMLFramework;

/// <summary>
/// Define um componente capaz de desenhar um frame de animação ou um Drawable em determinado RenderTarget
/// </summary>
public class Renderer : IComponent, IRender, ISpritesheetOrientable, IObserver<GameObject>
{
    public SpriteSheet SpriteSheet { get; set; }

    public bool IsEnabled { get; set; }

    public GameObject Root { get; set; }

    /// <summary>
    /// Recebe uma instância da SpriteSheet que o componente deve renderizar
    /// </summary>
    public Renderer(SpriteSheet spriteSheet, GameObject root)
    {
        SpriteSheet = spriteSheet;
        Root = root;
    }

    /// <summary>
    /// Renderiza o Sprite da SpriteSheet na janela informada
    /// </summary>
    public void Render(ref RenderWindow window)
    {
        window.Draw(this.SpriteSheet.Sprite);
    }

    public void Update(float deltaTime)
    {
        SpriteSheet.UpdateAnimation(deltaTime);
    }

    /// <summary>
    /// Sincroniza a renderização do spriteSheet para a direção de movimento do PlatformPlayerController
    /// </summary>
    public void OrientateSpriteSheetTo(EDirection direction)
    {
        SpriteSheet.SetDirection(direction);
    }

    public void OnNext(GameObject value)
    {
        SpriteSheet.Sprite.Position = value.Position;
    }

    public void OnError(Exception error)
    {
        
    }

    public void OnCompleted()
    {
        
    }
}
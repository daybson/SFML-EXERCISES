//
//
//  Generated by StarUML(tm) C# Add-In
//
//  @ Project : SFML Framework
//  @ File Name : Actor.cs
//  @ Date : 13/09/2016
//  @ Author : Daybson B. S. Paisante <daybson.paisante@outlook.com>
//
//

using SFML.Graphics;
using SFML.Window;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using SFML.System;

public class Actor : IUpdate
{
    public string name;
    public List<Component> components;

    public Actor()
    {
        this.components = new List<Component>();
    }

    public Actor(string name)
    {
        this.components = new List<Component>();
        this.name = name;
    }

    public T AddComponent<T>() where T : Component
    {
        var c = Activator.CreateInstance<T>();
        c.root = this;
        this.components.Add(c);
        return c;
    }

    public void RemoveComponentOfType(Type componentType)
    {
        var c = this.components.Find(component => component.GetType() == componentType);
        c.enabled = false;
        this.components.Remove(c);
    }

    public T GetComponent<T>() where T : Component
    {
        return (T)this.components.Find(c => c is T);
    }

    public List<Component> GetComponents<T>() where T : Component
    {
        return components.Where(c => c is T).ToList();
    }

    public void Update(float deltaTime)
    {
        this.components.ForEach(c => c.Update(deltaTime));
    }
}
